.ORG 0000H
JMP MAIN
.ORG 003CH
JMP ISR_75
.ORG 1000H
MAIN: LXI SP,0000H;
LXI H,8000H
MVI M,00H
MVI A,00H

MVI C,0AH
MVI B,00H
OUT 01H
MVI A,2BH
SIM
JMP DSPLAY
HLT

; INTERRUPT SUBROUTINE
ISR_75: PUSH PSW
PUSH H;
PUSH D;TEMP RESULT STORAGE
LXI H,8000H;
MVI A,0FFH;
OUT 00H;
CALL DELAY2
MVI A,00H
OUT 00H
INR B;INCREMENT CURRENT COUNTER
MOV A,B
CPI 0BH;IF CURRENT COUNTER>10 i.e 11
JNC NEXT;JUMP TO NEXT IF COUNTER<11 i.e COUNTETR <=10,PROCEED NORMALLY
MVI B,00H;OTHERWISE RESET CURRENT COUNTER TO ZERO

NEXT: IN 02H;TAKE INPUT
MOV D,A;TAKE A SNAPSHOT OF INPUT
ANI 80H;CHECK IF INPUT OR DSPLAY
JNZ NEXT2;IF INPUT PROCEED NORMALLY
MOV A,D;ELSE TAKE INPUT BACK
ORI 80H;SET THE DSPLAY PIN TO INPUT SO THAT IT CAN BE STORED IN MEMORY
MOV M,A;SAVE IN MEMORY
INX H;
JMP HASTEND;GET BACK TO DISPLAYING TEXT

NEXT2: MOV A,D;TAKE THE INPUT BACK;
MOV M,A;STORE IN MEMORY
INX H;GET READY TO READ NEXT MEMORY LOCATION
DCR C;DECREMENT MAX INPUT COUNTER
JZ HASTEND;IF TEN INPUTS ARE TAKEN ,START DSPLAYING
HASTEND: POP D;
POP H;
POP PSW;
RET;GO WAIT FOR ANOTHER INPUT



DSPLAY: PUSH PSW
PUSH H
PUSH D
LXI H,8000H
MVI C,B; C & B both have current input counters
EI;ENABLE INTERRUPT
;POLL for hall sensor here and initialize B with value in C
WAIT: RIM
ANI 80H;CHECK IF SID PIN GOES HIGH
JZ  WAIT;IF IT DOES NOT,=>HALL SENSOR IS NOT ON, HENCE KEEP ON WAITING

;ELSE HALL SENSOR IS ON, HENCE START DSPLAYING
 
AGAIN: MOV A,M; READ INPUT FROM MEMORY
MOV D,A;TAKE A SNAPSHOT OF INPUT
INX H
ANI 40H;CHECK WHETHER TO DSPLAY NUMBERS OR ALPHABETS
JZ DSP_NUM
JMP DSP_ALPHA

;DSPLAYING NUMBERS
DSP_NUM: MOV A,D;TAKE A SNAPSHOT OF THE INPUT 
CPI 0BAH;CHECK IF I/P IS '4'
JZ DSP_N4
JC DSP_N5_N9;
JMP DSP_N0_N3;

DSP_N5_N9: CPI 0B7H;CHECK IF I/P IS '7'
JZ DSP_N7
JC DSP_N8_N9;
JMP DSP_N5_N6;

DSP_N8_N9: CPI 0B6H;CHECK IF I/P IS '8'
JZ DSP_N8;
JMP DSP_N9;

DSP_N5_N6: CPI 0B9H;CHECK IF I/P IS '5'
JZ DSP_N5;
JMP DSP_N6;

DSP_N0_N3: CPI 0BCH;CHECK IF I/P IS '2'
JZ DSP_N2;
JC DSP_N3;
JMP DSP_N0_N1

DSP_N0_N1: CPI 0BEH;CHECK IF I/P IS '0'
JZ DSP_N0;
JMP DSP_N1;
;DSPLAYING ALPHABETS
DSP_ALPHA: MOV A,D;GET THE INPUT BACK FROM THE STORED SNAPSHOT
CPI 0F2H;IF I/P IS 'N'(13);
JZ DSP_N;DSPLAY 'N'
JC DSP_A1_A12;IF I/P<13,LOOK FOR I/P IN 1-12 ALPHABETS
JMP DSP_A14_A26;IF I/P >13,LOOK FOR I/P IN 14-26 ALPHABETS

DSP_A1_A12: CPI 0ECH;IF I/P IS 'T'(7)
JZ DSP_T;DSPLAY 'T'
JC DSP_A1_A6;IF I/P <6 LOOK FOR I/P IN 1-6 ALPHABETS
JMP DSP_A8_A12;IF I/P >6 LOOK FOR I/P IN 8-12 ALPHABETS

DSP_A1_A6: CPI 0E9H;IF I/P IS 'W'(4)
JZ DSP_W;DSPLAY 'W'
JC DSP_A1_A3;IF I/P <4 LOOK FOR I/P IN 1-3 ALPHABETS
JMP DSP_A5_A6;IF I/P >4 LOOK FOR I/P IN 5-6 ALPHABETS

DSP_A1_A3: CPI 0E7H;IF I/P IS 'Y'(2)
JZ DSP_Y;DSPLAY 'Y'
JC DSP_Z;IF I/P <2 DSPLAY 'Z'
JMP DSP_X;IF I/P >2 DSP[PLAY 'X'

DSP_A5_A6: CPI 0EAH;IF I/P IS 'V'(5)
JZ DSP_V;DSPLAY 'V'
JMP DSP_U;ELSE DSPLAY U

DSP_A8_A12: CPI 0EFH;IF I/P IS 'Q'(10)
JZ DSP_Q;DSPLAY 'Q'
JC DSP_A8_A9;IF I/P <10 LOOK FOR I/P IN 8-9 ALPHABETS
JMP DSP_A11_A12;IF I/P >13 LOOK FOR I/P IN 11-12 ALPHABETS

DSP_A8_A9: CPI 0EDH;IF I/P IS 'S'(8)
JZ DSP_S;DSPLAY 'S'
JMP DSP_R;DSPLAY 'R'

DSP_A11_A12: CPI 0F0H;IF I/P IS 'P'(11)
JZ DSP_P;DSPLAY 'P'
JMP DSP_O;DSPLAY 'O'

;TOP HALF OF ALPHABETS

DSP_A14_A26: CPI 0F9H;IF I/P IS 'G'(20)
JZ DSP_G;DSPLAY 'G'
JC DSP_A14_A19;IF I/P <20 LOOK FOR I/P IN 14-19 ALPHABETS
JMP DSP_A21_A26;IF I/P >20 LOOK FOR I/P IN 21-26 ALPHABETS

DSP_A14_A19: CPI 0F6H;IF I/P IS 'J'(17)
JZ DSP_J;DSPLAY 'J'
JC DSP_A14_A16;IF I/P <17 LOOK FOR I/P IN 14-16 ALPHABETS
JMP DSP_A18_A19;IF I/P >17 LOOK FOR I/P IN 18-19 ALPHABETS

DSP_A18_A19: CPI 0F7H;IF I/P IS 'I'(18)
JZ DSP_I;DSPLAY 'R'
JMP DSP_H;ELSE DSPLAY 'H'

DSP_A14_A16: CPI 0F4H;IF I/P IS 'L'(15)
JZ DSP_L;DSPLAY 'L'
JC DSP_M;IF I/P <20 DSPLAY'M'
JMP DSP_K;ELSE DSPLAY 'K'

DSP_A21_A26: CPI 0FDH;IF I/P IS 'C'(24)
JZ DSP_C;DSPLAY 'C'
JC DSP_A21_A23;IF I/P <24 LOOK FOR I/P IN 21-23 ALPHABETS
JMP DSP_A25_A26;IF I/P >24 LOOK FOR I/P IN 25-26 ALPHABETS

DSP_A25_A26: CPI 0FEH;IF I/P IS 'B'(25)
JZ DSP_B;DSPLAY 'B'
JMP DSP_A;ELSE DSPLAY 'A'

DSP_A21_A23: CPI 0FBH;IF I/P IS 'E'(22)
JZ DSP_E;DSPLAY 'E'
JC DSP_F;IF I/P <20 DSPLAY 'F'
JMP DSP_D;IF I/P >20 DSPLAY 'D'

SHOW: PUSH D
MVI D,08H
LOOP3: MOV A,M
OUT 01H
CALL DELAY1
INX H
DCR D
JNZ LOOP3
POP D
RET

DSP_N0:PUSH H;SAVE WHICH CODE WE ARE RETRIEVING FROM THE RAM
LXI H,2000H;ADDRESS OF HEX TABLE OF OUTPUT '0'
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N1: PUSH H
LXI H,2008H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT

DSP_N2: PUSH H
LXI H,2010H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N3: PUSH H
LXI H,2018H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N4: PUSH H
LXI H,2020H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N5: PUSH H
LXI H,2028H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N6: PUSH H
LXI H,2030H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N7:PUSH H
LXI H,2038H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N8: PUSH H
LXI H,2040H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N9: PUSH H
LXI H,2048H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_A: PUSH H
LXI H,2050H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_B: PUSH H
LXI H,2058H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_C: PUSH H
LXI H,2060H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_D: PUSH H
LXI H,2068H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_E: PUSH H
LXI H,2070H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_F: PUSH H
LXI H,2078H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_G: PUSH H
LXI H,2080H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_H: PUSH H
LXI H,2088H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_I: PUSH H
LXI H,2090H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_J: PUSH H
LXI H,2098H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_K: PUSH H
LXI H,20A0H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_L: PUSH H
LXI H,20A8H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_M: PUSH H
LXI H,20B0H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_N: PUSH H
LXI H,20B8H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_O: PUSH H
LXI H,20C0H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_P: PUSH H
LXI H,20C8H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_Q: PUSH H
LXI H,20D0H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_R: PUSH H
LXI H,20D8H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_S: PUSH H
LXI H,20E0H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_T: PUSH H
LXI H,20E8H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_U: PUSH H
LXI H,20F0H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_V: PUSH H
LXI H,20F8H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_W: PUSH H
LXI H,2108H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_X: PUSH H
LXI H,2110H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_Y:PUSH H
LXI H,2118H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
DSP_Z: PUSH H
LXI H,2120H
CALL SHOW
POP H
DCR B
JNZ AGAIN
JMP WAIT
 
.ORG 2000H
.DB 7EH
.DB 81H
.DB 81H
.DB 81H
.DB 81H
.DB 7EH
.DB 00H
.DB 00H
;DSP_N1: 
.DB 84H
.DB 82H
.DB 0FFH
.DB 80H
.DB 80H
.DB 00H
.DB 00H
.DB 00H
;DSP_N2:
.DB 0F9H
.DB 89H
.DB 89H
.DB 89H
.DB 89H
.DB 8FH
.DB 00H
.DB 00H
;DSP_N3:
.DB 91H
.DB 91H
.DB 91H
.DB 91H
.DB 91H
.DB 0FFH
.DB 00H
.DB 00H
;DSP_N4: .ORG 2000H
.DB 10H
.DB 18H
.DB 14H
.DB 12H
.DB 0FFH
.DB 10H
.DB 10H
.DB 00H
;DSP_N5: .ORG 2000H
.DB 8FH
.DB 89H
.DB 89H
.DB 89H
.DB 89H
.DB 0F9H
.DB 00H
.DB 00H
;DSP_N6: .ORG 2000H
.DB 0FFH
.DB 91H
.DB 91H
.DB 91H
.DB 91H
.DB 91H
.DB 00H
.DB 00H
;DSP_N7: .ORG 2000H
.DB 01H
.DB 01H
.DB 0F1H
.DB 09H
.DB 05H
.DB 03H
.DB 00H
.DB 00H
;DSP_N8: .ORG 2000H
.DB 0FFH
.DB 91H
.DB 91H
.DB 91H
.DB 91H
.DB 0FFH
.DB 00H
.DB 00H
;DSP_N9: .ORG 2000H
.DB 8FH
.DB 89H
.DB 89H
.DB 89H
.DB 89H
.DB 0FFH
.DB 00H
.DB 00H
;DSP_A: .ORG 2000H
.DB 0F8H
.DB 14H
.DB 12H
.DB 11H
.DB 12H
.DB 14H
.DB 0F8H
.DB 00H
;DSP_B: .ORG 2000H
.DB 0FFH
.DB 89H
.DB 89H
.DB 89H
.DB 89H
.DB 7EH
.DB 00H
.DB 00H
;DSP_C: .ORG 2000H
.DB 7EH
.DB 81H
.DB 81H
.DB 81H
.DB 81H
.DB 81H
.DB 00H
.DB 00H
;DSP_D: .ORG 2000H
.DB 0FFH
.DB 81H
.DB 81H
.DB 81H
.DB 81H
.DB 7EH
.DB 00H
.DB 00H
;DSP_E: .ORG 2000H
.DB 0FFH
.DB 89H
.DB 89H
.DB 89H
.DB 89H
.DB 89H
.DB 00H
.DB 00H
;DSP_F: .ORG 2000H
.DB 0FFH
.DB 09H
.DB 09H
.DB 09H
.DB 09H
.DB 09H
.DB 00H
.DB 00H
;DSP_G: .ORG 2000H
.DB 0FEH
.DB 81H
.DB 91H
.DB 91H
.DB 91H
.DB 0F1H
.DB 00H
.DB 00H
;DSP_H: .ORG 2000H
.DB 0FFH
.DB 08H
.DB 08H
.DB 08H
.DB 08H
.DB 0FFH
.DB 00H
.DB 00H
;DSP_I: .ORG 2000H
.DB 81H
.DB 81H
.DB 0FFH
.DB 81H
.DB 81H
.DB 00H
.DB 00H
.DB 00H
;DSP_J: .ORG 2000H
.DB 81H
.DB 81H
.DB 0FFH
.DB 01H
.DB 01H
.DB 00H
.DB 00H
.DB 00H
;DSP_K: .ORG 2000H
.DB 0FFH
.DB 10H
.DB 18H
.DB 24H
.DB 42H
.DB 81H
.DB 00H
.DB 00H
;DSP_L: .ORG 2000H
.DB 0FFH
.DB 80H
.DB 80H
.DB 80H
.DB 80H
.DB 80H
.DB 00H
.DB 00H
;DSP_M: .ORG 2000H
.DB 0FFH
.DB 02H
.DB 0CH
.DB 0CH
.DB 02H
.DB 0FFH
.DB 00H
.DB 00H
;DSP_N: .ORG 2000H
.DB 0FFH
.DB 02H
.DB 04H
.DB 08H
.DB 10H
.DB 0FFH
.DB 00H
.DB 00H
;DSP_O: .ORG 2000H
.DB 7EH
.DB 81H
.DB 81H
.DB 81H
.DB 81H
.DB 7EH
.DB 00H
.DB 00H
;DSP_P: .ORG 2000H
.DB 0FFH
.DB 11H
.DB 11H
.DB 11H
.DB 11H
.DB 0EH
.DB 00H
.DB 00H
;DSP_Q: .ORG 2000H
.DB 7EH
.DB 81H
.DB 81H
.DB 81H
.DB 0A1H
.DB 7EH
.DB 80H
.DB 00H
;DSP_R: .ORG 2000H
.DB 0FFH
.DB 11H
.DB 11H
.DB 31H
.DB 51H
.DB 9BH
.DB 00H
.DB 00H
;DSP_S: .ORG 2000H
.DB 8EH
.DB 91H
.DB 91H
.DB 91H
.DB 91H
.DB 62H
.DB 00H
.DB 00H
;DSP_T: .ORG 2000H
.DB 01H
.DB 01H
.DB 0FFH
.DB 01H
.DB 01H
.DB 00H
.DB 00H
.DB 00H
;DSP_U: .ORG 2000H
.DB 7FH
.DB 80H
.DB 80H
.DB 80H
.DB 80H
.DB 7FH
.DB 00H
.DB 00H
;DSP_V: .ORG 2000H
.DB 3FH
.DB 40H
.DB 80H
.DB 80H
.DB 40H
.DB 3FH
.DB 00H
.DB 00H
;DSP_W: .ORG 2000H
.DB 3FH
.DB 40H
.DB 80H
.DB 0FFH
.DB 80H
.DB 40H
.DB 3FH
.DB 00H
;DSP_X: .ORG 2000H
.DB 0C3H
.DB 24H
.DB 18H
.DB 18H
.DB 24H
.DB 0C3H
.DB 00H
.DB 00H
;DSP_Y: .ORG 2000H
.DB 01H
.DB 02H
.DB 04H
.DB 0F8H
.DB 04H
.DB 02H
.DB 01H
.DB 00H
;DSP_Z: .ORG 2000H
.DB 81H
.DB 0C1H
.DB 0A1H
.DB 91H
.DB 89H
.DB 84H
.DB 83H
.DB 00H

DELAY2: PUSH B
PUSH D
 LXI B,03EDH
LOOP4: LXI D,038DH 
LOOP5: DCR D
JNZ LOOP5
DCR B
JNZ LOOP4
POP D
POP B
RET

DELAY1: PUSH B
MVI B,82H
LOOP6: DCR B
JNZ LOOP6
POP B
RET


